/**
 * @file Std_Types.h
 * @author Ahmed Taha (ahmed.m.taha01@gmail.com)
 * @brief Contains Standard Types
 * @version 0.1
 * @date 2022-11-08
 * 
 * @copyright Copyright (c) 2022
 * 
 */

#ifndef __STD_TYPES_H__
#define __STD_TYPES_H__

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/

#include "Platform_Types.h"
#include "Compiler.h"
#include "Mcu_Hw.h"

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

#define WORD_BIT_LENTH  (32U)

#define STD_HIGH        (1U)    /* Physical Voltage Level 5V .. 3.3V */
#define STD_LOW         (0U)    /* Physical Voltage Level 0V */

#define STD_ON          (1U)
#define STD_OFF         (0U)

/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/

#define SET_BIT(REG, BIT)                   ( ( REG ) |= ( 0x01U << ( BIT ) ) )
#define CLR_BIT(REG, BIT)                   ( ( REG ) &= ~( 0x01U << ( BIT ) ) )
#define TOGGLE_BIT(REG, BIT)                ( ( REG ) ^= ( 0x01U << ( BIT ) ) ) 
#define WRITE_BIT(REG, BIT, VAL)            ( ( VAL ) ? SET_BIT(REG, BIT) : CLR_BIT(REG, BIT) )
#define WRITE_VAL(REG, OFFSET, VAL)         ( ( REG ) |= ( ( VAL ) << ( OFFSET ) ) )
#define READ_BIT(REG, BIT)                  ( ( ( REG ) >> ( BIT ) ) & 0x01U)

/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/

typedef enum
{
    E_OK = 0,
    E_NOT_OK
}Std_ReturnType;

/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

 
#endif  /* __STD_TYPES_H__ */

/**********************************************************************************************************************
 *  END OF FILE: Std_Types.h
 *********************************************************************************************************************/
